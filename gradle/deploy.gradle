ssh.settings {
    knownHosts = allowAnyHosts
}

def baseGroup = "ELJ-Basic"
def fatGroup = "ELJ-FatJar"
def slimGroup = "ELJ-SlimJar"

remotes {
    ev3dev {
        host = project.brickHost
        user = project.brickUser
        password = project.brickPassword
    }
}

/////////////
// GENERAL //
/////////////

task testConnection {
    group baseGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "ls ")
            }
        }
    }
}

task pkillJava {
    group baseGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "pkill java")
            }
        }
    }
}

task removePreviousJar {
    group baseGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "rm -f ${project.userJarPath(true)} ${project.userJarPath(false)} ")
            }
        }
    }
}


////////////////
// FAT BUILDS //
////////////////

task deploy {
    group fatGroup
    dependsOn clean, fatJar
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "mkdir -p ${project.userJarsPath}/")
                put from: "./build/libs/${rootProject.name}-${version}-all.jar", into: "${project.userJarsPath}"
            }
        }
    }
}

task remoteRun {
    group fatGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "time java -jar ${project.userJarPath()} ")
            }
        }
    }
}

task remoteBrickRun {
    group fatGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "time brickrun -- java -jar ${project.userJarPath()} ")
            }
        }
    }
}

task remoteRunClassVerbose {
    group fatGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "java -verbose:class -jar ${project.userJarPath()} ")
            }
        }
    }
}

task remoteSudoRun {
    group fatGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "echo -e \"${project.brickPassword}\" | sudo -S java -jar ${project.userJarPath()} ")
            }
        }
    }
}

task remoteProfilingRun {
    group fatGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "brickrun -- java -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=7091 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -jar ${project.userJarPath()} ")
            }
        }
    }
}

task remoteProfilingSudoRun {
    group fatGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "echo -e \"${project.brickPassword}\" | sudo -S brickrun -- java -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=7091 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -jar ${project.userJarPath()} ")
            }
        }
    }
}

task deployAndRun {
    group fatGroup
    dependsOn deploy, remoteRun
    doLast {
    }
}

task deployAndBrickRun {
    group fatGroup
    dependsOn deploy, remoteBrickRun
    doLast {
    }
}


task deployAndSudoRun {
    group fatGroup
    dependsOn deploy, remoteSudoRun
    doLast {
    }
}

task deployAndProfilingRun {
    group fatGroup
    dependsOn deploy, remoteProfilingRun
    doLast {
    }
}

task deployAndProfilingSudoRun {
    group fatGroup
    dependsOn deploy, remoteProfilingSudoRun
    doLast {
    }
}

/////////////////
// SLIM BUILDS //
/////////////////

task installLibraries {
    group slimGroup
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "rm -rf ${project.externalJarsPath}")
                sshPrint(delegate, "mkdir -p ${project.externalJarsPath}/")
                configurations.runtime.each {
                    println "Uploading: ${it.name}"
                    delegate.put from: it.path, into: "${project.externalJarsPath}"
                }
            }
        }
    }
}

task deploySlim {
    group slimGroup
    dependsOn clean, jar
    doLast {
        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "mkdir -p ${project.userJarsPath}/")
                put from: "./build/libs/${rootProject.name}-${version}.jar", into: "${project.userJarsPath}"
            }
        }
    }
}

task remoteRunSlim {
    group slimGroup
    doLast {
        def dependenciesPath = ""

        configurations.runtime.each {
            dependenciesPath += ":${project.externalJarsPath}/${it.name}"
        }

        println dependenciesPath

        ssh.run {
            session(remotes.ev3dev) {
                sshPrint(delegate, "${project.prefix} java ${project.jvmFlags} -cp ${project.userJarPath(false)}" + dependenciesPath + " ${project.mainClass}")
            }
        }
    }
}

task deployAndRunSlim {
    group slimGroup
    dependsOn deploySlim, remoteRunSlim
    doLast {
    }
}